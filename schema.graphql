type GlobalState @entity {
  id: ID!
  pointsPerEpoch: BigInt!
  startTime: BigInt!
  epochLength: BigInt!
  pointsDistributedTillEpoch: BigInt!
  jobsByEpoch: [TotalJobsPerEpoch!]! @derivedFrom(field: "index")
  generators: [User!]!
  Users: [User!]!
}

type Task @entity {
  id: ID!
  epoch: BigInt!
  generator: Generator!
  assignedAt: BigInt!
  completedAt: BigInt
}

type TotalJobsPerEpoch @entity {
  id: ID!
  index: GlobalState!
  epoch: BigInt!
  jobCount: BigInt!
}

type Generator @entity {
  id: ID!
  address: String!
  commission: BigInt!
  tasks: [Task!]! @derivedFrom(field: "generator")
  delegations: [Delegation!]! @derivedFrom(field: "generator")
  jobsByEpoch: [JobsPerEpoch!]! @derivedFrom(field: "address")
  totalDelegation: [TotalDelegation!]! @derivedFrom(field: "generator")
}

type Delegation @entity {
  id: ID!
  generator: Generator!
  delegator: User!
  token: String!
  amount: BigInt!
  lastUpdatedEpoch: BigInt!
}

type TotalDelegation @entity {
  id: ID!
  generator: Generator!
  token: String!
  amount: BigInt!
}

type JobsPerEpoch @entity {
  id: ID!
  address: Generator!
  epoch: BigInt!
  jobCount: BigInt!
}

type User @entity {
  id: ID!
  address: String!
  points: BigInt!
}
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AddExtraIVSImage extends ethereum.Event {
  get params(): AddExtraIVSImage__Params {
    return new AddExtraIVSImage__Params(this);
  }
}

export class AddExtraIVSImage__Params {
  _event: AddExtraIVSImage;

  constructor(event: AddExtraIVSImage) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get imageId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class AddExtraProverImage extends ethereum.Event {
  get params(): AddExtraProverImage__Params {
    return new AddExtraProverImage__Params(this);
  }
}

export class AddExtraProverImage__Params {
  _event: AddExtraProverImage;

  constructor(event: AddExtraProverImage) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get imageId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class AskCancelled extends ethereum.Event {
  get params(): AskCancelled__Params {
    return new AskCancelled__Params(this);
  }
}

export class AskCancelled__Params {
  _event: AskCancelled;

  constructor(event: AskCancelled) {
    this._event = event;
  }

  get askId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AskCreated extends ethereum.Event {
  get params(): AskCreated__Params {
    return new AskCreated__Params(this);
  }
}

export class AskCreated__Params {
  _event: AskCreated;

  constructor(event: AskCreated) {
    this._event = event;
  }

  get askId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get hasPrivateInputs(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get secret_data(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get acl(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class InvalidInputsDetected extends ethereum.Event {
  get params(): InvalidInputsDetected__Params {
    return new InvalidInputsDetected__Params(this);
  }
}

export class InvalidInputsDetected__Params {
  _event: InvalidInputsDetected;

  constructor(event: InvalidInputsDetected) {
    this._event = event;
  }

  get askId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MarketplaceCreated extends ethereum.Event {
  get params(): MarketplaceCreated__Params {
    return new MarketplaceCreated__Params(this);
  }
}

export class MarketplaceCreated__Params {
  _event: MarketplaceCreated;

  constructor(event: MarketplaceCreated) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OperatorFeeRewardAdded extends ethereum.Event {
  get params(): OperatorFeeRewardAdded__Params {
    return new OperatorFeeRewardAdded__Params(this);
  }
}

export class OperatorFeeRewardAdded__Params {
  _event: OperatorFeeRewardAdded;

  constructor(event: OperatorFeeRewardAdded) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get feeRewardAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OperatorRewardShareSet extends ethereum.Event {
  get params(): OperatorRewardShareSet__Params {
    return new OperatorRewardShareSet__Params(this);
  }
}

export class OperatorRewardShareSet__Params {
  _event: OperatorRewardShareSet;

  constructor(event: OperatorRewardShareSet) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get rewardShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProofCreated extends ethereum.Event {
  get params(): ProofCreated__Params {
    return new ProofCreated__Params(this);
  }
}

export class ProofCreated__Params {
  _event: ProofCreated;

  constructor(event: ProofCreated) {
    this._event = event;
  }

  get askId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proof(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class ProofNotGenerated extends ethereum.Event {
  get params(): ProofNotGenerated__Params {
    return new ProofNotGenerated__Params(this);
  }
}

export class ProofNotGenerated__Params {
  _event: ProofNotGenerated;

  constructor(event: ProofNotGenerated) {
    this._event = event;
  }

  get askId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RemoveExtraIVSImage extends ethereum.Event {
  get params(): RemoveExtraIVSImage__Params {
    return new RemoveExtraIVSImage__Params(this);
  }
}

export class RemoveExtraIVSImage__Params {
  _event: RemoveExtraIVSImage;

  constructor(event: RemoveExtraIVSImage) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get imageId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class RemoveExtraProverImage extends ethereum.Event {
  get params(): RemoveExtraProverImage__Params {
    return new RemoveExtraProverImage__Params(this);
  }
}

export class RemoveExtraProverImage__Params {
  _event: RemoveExtraProverImage;

  constructor(event: RemoveExtraProverImage) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get imageId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TaskCreated extends ethereum.Event {
  get params(): TaskCreated__Params {
    return new TaskCreated__Params(this);
  }
}

export class TaskCreated__Params {
  _event: TaskCreated;

  constructor(event: TaskCreated) {
    this._event = event;
  }

  get askId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get generator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get new_acl(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class TransmitterFeeRewardAdded extends ethereum.Event {
  get params(): TransmitterFeeRewardAdded__Params {
    return new TransmitterFeeRewardAdded__Params(this);
  }
}

export class TransmitterFeeRewardAdded__Params {
  _event: TransmitterFeeRewardAdded;

  constructor(event: TransmitterFeeRewardAdded) {
    this._event = event;
  }

  get transmitter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get feeRewardAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateCostPerBytes extends ethereum.Event {
  get params(): UpdateCostPerBytes__Params {
    return new UpdateCostPerBytes__Params(this);
  }
}

export class UpdateCostPerBytes__Params {
  _event: UpdateCostPerBytes;

  constructor(event: UpdateCostPerBytes) {
    this._event = event;
  }

  get secretType(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get costPerInputBytes(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdateMinProvingTime extends ethereum.Event {
  get params(): UpdateMinProvingTime__Params {
    return new UpdateMinProvingTime__Params(this);
  }
}

export class UpdateMinProvingTime__Params {
  _event: UpdateMinProvingTime;

  constructor(event: UpdateMinProvingTime) {
    this._event = event;
  }

  get secretType(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get newProvingTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProofMarketplace__getPlatformFeeInputAskStruct extends ethereum.Tuple {
  get marketId(): BigInt {
    return this[0].toBigInt();
  }

  get reward(): BigInt {
    return this[1].toBigInt();
  }

  get expiry(): BigInt {
    return this[2].toBigInt();
  }

  get timeTakenForProofGeneration(): BigInt {
    return this[3].toBigInt();
  }

  get deadline(): BigInt {
    return this[4].toBigInt();
  }

  get refundAddress(): Address {
    return this[5].toAddress();
  }

  get proverData(): Bytes {
    return this[6].toBytes();
  }
}

export class ProofMarketplace__listOfAskResultAskStruct extends ethereum.Tuple {
  get marketId(): BigInt {
    return this[0].toBigInt();
  }

  get reward(): BigInt {
    return this[1].toBigInt();
  }

  get expiry(): BigInt {
    return this[2].toBigInt();
  }

  get timeTakenForProofGeneration(): BigInt {
    return this[3].toBigInt();
  }

  get deadline(): BigInt {
    return this[4].toBigInt();
  }

  get refundAddress(): Address {
    return this[5].toAddress();
  }

  get proverData(): Bytes {
    return this[6].toBytes();
  }
}

export class ProofMarketplace__listOfAskResult {
  value0: ProofMarketplace__listOfAskResultAskStruct;
  value1: i32;
  value2: Address;
  value3: Address;

  constructor(
    value0: ProofMarketplace__listOfAskResultAskStruct,
    value1: i32,
    value2: Address,
    value3: Address,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    return map;
  }

  getAsk(): ProofMarketplace__listOfAskResultAskStruct {
    return this.value0;
  }

  getState(): i32 {
    return this.value1;
  }

  getRequester(): Address {
    return this.value2;
  }

  getGenerator(): Address {
    return this.value3;
  }
}

export class ProofMarketplace__marketDataResult {
  value0: Address;
  value1: Bytes;
  value2: BigInt;
  value3: BigInt;
  value4: Bytes;
  value5: Address;
  value6: Bytes;

  constructor(
    value0: Address,
    value1: Bytes,
    value2: BigInt,
    value3: BigInt,
    value4: Bytes,
    value5: Address,
    value6: Bytes,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromFixedBytes(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromBytes(this.value6));
    return map;
  }

  getVerifier(): Address {
    return this.value0;
  }

  getProverImageId(): Bytes {
    return this.value1;
  }

  getSlashingPenalty(): BigInt {
    return this.value2;
  }

  getActivationBlock(): BigInt {
    return this.value3;
  }

  getIvsImageId(): Bytes {
    return this.value4;
  }

  getCreator(): Address {
    return this.value5;
  }

  getMarketmetadata(): Bytes {
    return this.value6;
  }
}

export class ProofMarketplace extends ethereum.SmartContract {
  static bind(address: Address): ProofMarketplace {
    return new ProofMarketplace("ProofMarketplace", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ENTITY_KEY_REGISTRY(): Address {
    let result = super.call(
      "ENTITY_KEY_REGISTRY",
      "ENTITY_KEY_REGISTRY():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_ENTITY_KEY_REGISTRY(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ENTITY_KEY_REGISTRY",
      "ENTITY_KEY_REGISTRY():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  GENERATOR_REGISTRY(): Address {
    let result = super.call(
      "GENERATOR_REGISTRY",
      "GENERATOR_REGISTRY():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_GENERATOR_REGISTRY(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "GENERATOR_REGISTRY",
      "GENERATOR_REGISTRY():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  MARKET_ACTIVATION_DELAY(): BigInt {
    let result = super.call(
      "MARKET_ACTIVATION_DELAY",
      "MARKET_ACTIVATION_DELAY():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MARKET_ACTIVATION_DELAY(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MARKET_ACTIVATION_DELAY",
      "MARKET_ACTIVATION_DELAY():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MARKET_CREATION_COST(): BigInt {
    let result = super.call(
      "MARKET_CREATION_COST",
      "MARKET_CREATION_COST():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MARKET_CREATION_COST(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MARKET_CREATION_COST",
      "MARKET_CREATION_COST():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MATCHING_ENGINE_ROLE(): Bytes {
    let result = super.call(
      "MATCHING_ENGINE_ROLE",
      "MATCHING_ENGINE_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_MATCHING_ENGINE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MATCHING_ENGINE_ROLE",
      "MATCHING_ENGINE_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAYMENT_TOKEN(): Address {
    let result = super.call("PAYMENT_TOKEN", "PAYMENT_TOKEN():(address)", []);

    return result[0].toAddress();
  }

  try_PAYMENT_TOKEN(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "PAYMENT_TOKEN",
      "PAYMENT_TOKEN():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  SYMBIOTIC_STAKING_REWARD_ROLE(): Bytes {
    let result = super.call(
      "SYMBIOTIC_STAKING_REWARD_ROLE",
      "SYMBIOTIC_STAKING_REWARD_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_SYMBIOTIC_STAKING_REWARD_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "SYMBIOTIC_STAKING_REWARD_ROLE",
      "SYMBIOTIC_STAKING_REWARD_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  SYMBIOTIC_STAKING_ROLE(): Bytes {
    let result = super.call(
      "SYMBIOTIC_STAKING_ROLE",
      "SYMBIOTIC_STAKING_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_SYMBIOTIC_STAKING_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "SYMBIOTIC_STAKING_ROLE",
      "SYMBIOTIC_STAKING_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  UPDATER_ROLE(): Bytes {
    let result = super.call("UPDATER_ROLE", "UPDATER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_UPDATER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("UPDATER_ROLE", "UPDATER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  UPGRADE_INTERFACE_VERSION(): string {
    let result = super.call(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );

    return result[0].toString();
  }

  try_UPGRADE_INTERFACE_VERSION(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  claimableAmount(param0: Address): BigInt {
    let result = super.call(
      "claimableAmount",
      "claimableAmount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_claimableAmount(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimableAmount",
      "claimableAmount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  costPerInputBytes(param0: i32): BigInt {
    let result = super.call(
      "costPerInputBytes",
      "costPerInputBytes(uint8):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))],
    );

    return result[0].toBigInt();
  }

  try_costPerInputBytes(param0: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "costPerInputBytes",
      "costPerInputBytes(uint8):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAskState(askId: BigInt): i32 {
    let result = super.call("getAskState", "getAskState(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(askId),
    ]);

    return result[0].toI32();
  }

  try_getAskState(askId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall("getAskState", "getAskState(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(askId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getPlatformFee(
    secretType: i32,
    ask: ProofMarketplace__getPlatformFeeInputAskStruct,
    privateInputs: Bytes,
    acl: Bytes,
  ): BigInt {
    let result = super.call(
      "getPlatformFee",
      "getPlatformFee(uint8,(uint256,uint256,uint256,uint256,uint256,address,bytes),bytes,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(secretType)),
        ethereum.Value.fromTuple(ask),
        ethereum.Value.fromBytes(privateInputs),
        ethereum.Value.fromBytes(acl),
      ],
    );

    return result[0].toBigInt();
  }

  try_getPlatformFee(
    secretType: i32,
    ask: ProofMarketplace__getPlatformFeeInputAskStruct,
    privateInputs: Bytes,
    acl: Bytes,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPlatformFee",
      "getPlatformFee(uint8,(uint256,uint256,uint256,uint256,uint256,address,bytes),bytes,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(secretType)),
        ethereum.Value.fromTuple(ask),
        ethereum.Value.fromBytes(privateInputs),
        ethereum.Value.fromBytes(acl),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  listOfAsk(param0: BigInt): ProofMarketplace__listOfAskResult {
    let result = super.call(
      "listOfAsk",
      "listOfAsk(uint256):((uint256,uint256,uint256,uint256,uint256,address,bytes),uint8,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return changetype<ProofMarketplace__listOfAskResult>(
      new ProofMarketplace__listOfAskResult(
        changetype<ProofMarketplace__listOfAskResultAskStruct>(
          result[0].toTuple(),
        ),
        result[1].toI32(),
        result[2].toAddress(),
        result[3].toAddress(),
      ),
    );
  }

  try_listOfAsk(
    param0: BigInt,
  ): ethereum.CallResult<ProofMarketplace__listOfAskResult> {
    let result = super.tryCall(
      "listOfAsk",
      "listOfAsk(uint256):((uint256,uint256,uint256,uint256,uint256,address,bytes),uint8,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ProofMarketplace__listOfAskResult>(
        new ProofMarketplace__listOfAskResult(
          changetype<ProofMarketplace__listOfAskResultAskStruct>(
            value[0].toTuple(),
          ),
          value[1].toI32(),
          value[2].toAddress(),
          value[3].toAddress(),
        ),
      ),
    );
  }

  marketData(param0: BigInt): ProofMarketplace__marketDataResult {
    let result = super.call(
      "marketData",
      "marketData(uint256):(address,bytes32,uint256,uint256,bytes32,address,bytes)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new ProofMarketplace__marketDataResult(
      result[0].toAddress(),
      result[1].toBytes(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBytes(),
      result[5].toAddress(),
      result[6].toBytes(),
    );
  }

  try_marketData(
    param0: BigInt,
  ): ethereum.CallResult<ProofMarketplace__marketDataResult> {
    let result = super.tryCall(
      "marketData",
      "marketData(uint256):(address,bytes32,uint256,uint256,bytes32,address,bytes)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ProofMarketplace__marketDataResult(
        value[0].toAddress(),
        value[1].toBytes(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBytes(),
        value[5].toAddress(),
        value[6].toBytes(),
      ),
    );
  }

  minProvingTime(param0: i32): BigInt {
    let result = super.call(
      "minProvingTime",
      "minProvingTime(uint8):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))],
    );

    return result[0].toBigInt();
  }

  try_minProvingTime(param0: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minProvingTime",
      "minProvingTime(uint8):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  operatorRewardShares(operator: Address): BigInt {
    let result = super.call(
      "operatorRewardShares",
      "operatorRewardShares(address):(uint256)",
      [ethereum.Value.fromAddress(operator)],
    );

    return result[0].toBigInt();
  }

  try_operatorRewardShares(operator: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "operatorRewardShares",
      "operatorRewardShares(address):(uint256)",
      [ethereum.Value.fromAddress(operator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _paymentToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _marketCreationCost(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _treasury(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _generatorRegistry(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _entityRegistry(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddExtraImagesCall extends ethereum.Call {
  get inputs(): AddExtraImagesCall__Inputs {
    return new AddExtraImagesCall__Inputs(this);
  }

  get outputs(): AddExtraImagesCall__Outputs {
    return new AddExtraImagesCall__Outputs(this);
  }
}

export class AddExtraImagesCall__Inputs {
  _call: AddExtraImagesCall;

  constructor(call: AddExtraImagesCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _proverPcrs(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }

  get _ivsPcrs(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class AddExtraImagesCall__Outputs {
  _call: AddExtraImagesCall;

  constructor(call: AddExtraImagesCall) {
    this._call = call;
  }
}

export class CancelAskCall extends ethereum.Call {
  get inputs(): CancelAskCall__Inputs {
    return new CancelAskCall__Inputs(this);
  }

  get outputs(): CancelAskCall__Outputs {
    return new CancelAskCall__Outputs(this);
  }
}

export class CancelAskCall__Inputs {
  _call: CancelAskCall;

  constructor(call: CancelAskCall) {
    this._call = call;
  }

  get askId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelAskCall__Outputs {
  _call: CancelAskCall;

  constructor(call: CancelAskCall) {
    this._call = call;
  }
}

export class CreateAskCall extends ethereum.Call {
  get inputs(): CreateAskCall__Inputs {
    return new CreateAskCall__Inputs(this);
  }

  get outputs(): CreateAskCall__Outputs {
    return new CreateAskCall__Outputs(this);
  }
}

export class CreateAskCall__Inputs {
  _call: CreateAskCall;

  constructor(call: CreateAskCall) {
    this._call = call;
  }

  get ask(): CreateAskCallAskStruct {
    return changetype<CreateAskCallAskStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get secretType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get privateInputs(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get acl(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class CreateAskCall__Outputs {
  _call: CreateAskCall;

  constructor(call: CreateAskCall) {
    this._call = call;
  }
}

export class CreateAskCallAskStruct extends ethereum.Tuple {
  get marketId(): BigInt {
    return this[0].toBigInt();
  }

  get reward(): BigInt {
    return this[1].toBigInt();
  }

  get expiry(): BigInt {
    return this[2].toBigInt();
  }

  get timeTakenForProofGeneration(): BigInt {
    return this[3].toBigInt();
  }

  get deadline(): BigInt {
    return this[4].toBigInt();
  }

  get refundAddress(): Address {
    return this[5].toAddress();
  }

  get proverData(): Bytes {
    return this[6].toBytes();
  }
}

export class CreateMarketplaceCall extends ethereum.Call {
  get inputs(): CreateMarketplaceCall__Inputs {
    return new CreateMarketplaceCall__Inputs(this);
  }

  get outputs(): CreateMarketplaceCall__Outputs {
    return new CreateMarketplaceCall__Outputs(this);
  }
}

export class CreateMarketplaceCall__Inputs {
  _call: CreateMarketplaceCall;

  constructor(call: CreateMarketplaceCall) {
    this._call = call;
  }

  get _marketmetadata(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _verifier(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _penalty(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _proverPcrs(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _ivsPcrs(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class CreateMarketplaceCall__Outputs {
  _call: CreateMarketplaceCall;

  constructor(call: CreateMarketplaceCall) {
    this._call = call;
  }
}

export class DiscardRequestCall extends ethereum.Call {
  get inputs(): DiscardRequestCall__Inputs {
    return new DiscardRequestCall__Inputs(this);
  }

  get outputs(): DiscardRequestCall__Outputs {
    return new DiscardRequestCall__Outputs(this);
  }
}

export class DiscardRequestCall__Inputs {
  _call: DiscardRequestCall;

  constructor(call: DiscardRequestCall) {
    this._call = call;
  }

  get askId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DiscardRequestCall__Outputs {
  _call: DiscardRequestCall;

  constructor(call: DiscardRequestCall) {
    this._call = call;
  }
}

export class DistributeTransmitterFeeRewardCall extends ethereum.Call {
  get inputs(): DistributeTransmitterFeeRewardCall__Inputs {
    return new DistributeTransmitterFeeRewardCall__Inputs(this);
  }

  get outputs(): DistributeTransmitterFeeRewardCall__Outputs {
    return new DistributeTransmitterFeeRewardCall__Outputs(this);
  }
}

export class DistributeTransmitterFeeRewardCall__Inputs {
  _call: DistributeTransmitterFeeRewardCall;

  constructor(call: DistributeTransmitterFeeRewardCall) {
    this._call = call;
  }

  get _transmitter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _feeRewardAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DistributeTransmitterFeeRewardCall__Outputs {
  _call: DistributeTransmitterFeeRewardCall;

  constructor(call: DistributeTransmitterFeeRewardCall) {
    this._call = call;
  }
}

export class FlushCall extends ethereum.Call {
  get inputs(): FlushCall__Inputs {
    return new FlushCall__Inputs(this);
  }

  get outputs(): FlushCall__Outputs {
    return new FlushCall__Outputs(this);
  }
}

export class FlushCall__Inputs {
  _call: FlushCall;

  constructor(call: FlushCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class FlushCall__Outputs {
  _call: FlushCall;

  constructor(call: FlushCall) {
    this._call = call;
  }
}

export class FreezeMarketCall extends ethereum.Call {
  get inputs(): FreezeMarketCall__Inputs {
    return new FreezeMarketCall__Inputs(this);
  }

  get outputs(): FreezeMarketCall__Outputs {
    return new FreezeMarketCall__Outputs(this);
  }
}

export class FreezeMarketCall__Inputs {
  _call: FreezeMarketCall;

  constructor(call: FreezeMarketCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FreezeMarketCall__Outputs {
  _call: FreezeMarketCall;

  constructor(call: FreezeMarketCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RelayBatchAssignTasksCall extends ethereum.Call {
  get inputs(): RelayBatchAssignTasksCall__Inputs {
    return new RelayBatchAssignTasksCall__Inputs(this);
  }

  get outputs(): RelayBatchAssignTasksCall__Outputs {
    return new RelayBatchAssignTasksCall__Outputs(this);
  }
}

export class RelayBatchAssignTasksCall__Inputs {
  _call: RelayBatchAssignTasksCall;

  constructor(call: RelayBatchAssignTasksCall) {
    this._call = call;
  }

  get askIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get generators(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get newAcls(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get signature(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RelayBatchAssignTasksCall__Outputs {
  _call: RelayBatchAssignTasksCall;

  constructor(call: RelayBatchAssignTasksCall) {
    this._call = call;
  }
}

export class RemoveExtraImagesCall extends ethereum.Call {
  get inputs(): RemoveExtraImagesCall__Inputs {
    return new RemoveExtraImagesCall__Inputs(this);
  }

  get outputs(): RemoveExtraImagesCall__Outputs {
    return new RemoveExtraImagesCall__Outputs(this);
  }
}

export class RemoveExtraImagesCall__Inputs {
  _call: RemoveExtraImagesCall;

  constructor(call: RemoveExtraImagesCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _proverPcrs(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }

  get _ivsPcrs(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class RemoveExtraImagesCall__Outputs {
  _call: RemoveExtraImagesCall;

  constructor(call: RemoveExtraImagesCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get callerConfirmation(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetMatchingEngineImageCall extends ethereum.Call {
  get inputs(): SetMatchingEngineImageCall__Inputs {
    return new SetMatchingEngineImageCall__Inputs(this);
  }

  get outputs(): SetMatchingEngineImageCall__Outputs {
    return new SetMatchingEngineImageCall__Outputs(this);
  }
}

export class SetMatchingEngineImageCall__Inputs {
  _call: SetMatchingEngineImageCall;

  constructor(call: SetMatchingEngineImageCall) {
    this._call = call;
  }

  get pcrs(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetMatchingEngineImageCall__Outputs {
  _call: SetMatchingEngineImageCall;

  constructor(call: SetMatchingEngineImageCall) {
    this._call = call;
  }
}

export class SetOperatorRewardShareCall extends ethereum.Call {
  get inputs(): SetOperatorRewardShareCall__Inputs {
    return new SetOperatorRewardShareCall__Inputs(this);
  }

  get outputs(): SetOperatorRewardShareCall__Outputs {
    return new SetOperatorRewardShareCall__Outputs(this);
  }
}

export class SetOperatorRewardShareCall__Inputs {
  _call: SetOperatorRewardShareCall;

  constructor(call: SetOperatorRewardShareCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _rewardShare(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetOperatorRewardShareCall__Outputs {
  _call: SetOperatorRewardShareCall;

  constructor(call: SetOperatorRewardShareCall) {
    this._call = call;
  }
}

export class SlashGeneratorCall extends ethereum.Call {
  get inputs(): SlashGeneratorCall__Inputs {
    return new SlashGeneratorCall__Inputs(this);
  }

  get outputs(): SlashGeneratorCall__Outputs {
    return new SlashGeneratorCall__Outputs(this);
  }
}

export class SlashGeneratorCall__Inputs {
  _call: SlashGeneratorCall;

  constructor(call: SlashGeneratorCall) {
    this._call = call;
  }

  get askId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SlashGeneratorCall__Outputs {
  _call: SlashGeneratorCall;

  constructor(call: SlashGeneratorCall) {
    this._call = call;
  }
}

export class SubmitProofCall extends ethereum.Call {
  get inputs(): SubmitProofCall__Inputs {
    return new SubmitProofCall__Inputs(this);
  }

  get outputs(): SubmitProofCall__Outputs {
    return new SubmitProofCall__Outputs(this);
  }
}

export class SubmitProofCall__Inputs {
  _call: SubmitProofCall;

  constructor(call: SubmitProofCall) {
    this._call = call;
  }

  get askId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proof(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SubmitProofCall__Outputs {
  _call: SubmitProofCall;

  constructor(call: SubmitProofCall) {
    this._call = call;
  }
}

export class SubmitProofForInvalidInputsCall extends ethereum.Call {
  get inputs(): SubmitProofForInvalidInputsCall__Inputs {
    return new SubmitProofForInvalidInputsCall__Inputs(this);
  }

  get outputs(): SubmitProofForInvalidInputsCall__Outputs {
    return new SubmitProofForInvalidInputsCall__Outputs(this);
  }
}

export class SubmitProofForInvalidInputsCall__Inputs {
  _call: SubmitProofForInvalidInputsCall;

  constructor(call: SubmitProofForInvalidInputsCall) {
    this._call = call;
  }

  get askId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get invalidProofSignature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SubmitProofForInvalidInputsCall__Outputs {
  _call: SubmitProofForInvalidInputsCall;

  constructor(call: SubmitProofForInvalidInputsCall) {
    this._call = call;
  }
}

export class TransferFeeTokenCall extends ethereum.Call {
  get inputs(): TransferFeeTokenCall__Inputs {
    return new TransferFeeTokenCall__Inputs(this);
  }

  get outputs(): TransferFeeTokenCall__Outputs {
    return new TransferFeeTokenCall__Outputs(this);
  }
}

export class TransferFeeTokenCall__Inputs {
  _call: TransferFeeTokenCall;

  constructor(call: TransferFeeTokenCall) {
    this._call = call;
  }

  get _recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferFeeTokenCall__Outputs {
  _call: TransferFeeTokenCall;

  constructor(call: TransferFeeTokenCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateCostPerBytesCall extends ethereum.Call {
  get inputs(): UpdateCostPerBytesCall__Inputs {
    return new UpdateCostPerBytesCall__Inputs(this);
  }

  get outputs(): UpdateCostPerBytesCall__Outputs {
    return new UpdateCostPerBytesCall__Outputs(this);
  }
}

export class UpdateCostPerBytesCall__Inputs {
  _call: UpdateCostPerBytesCall;

  constructor(call: UpdateCostPerBytesCall) {
    this._call = call;
  }

  get secretType(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get costPerByte(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateCostPerBytesCall__Outputs {
  _call: UpdateCostPerBytesCall;

  constructor(call: UpdateCostPerBytesCall) {
    this._call = call;
  }
}

export class UpdateMinProvingTimeCall extends ethereum.Call {
  get inputs(): UpdateMinProvingTimeCall__Inputs {
    return new UpdateMinProvingTimeCall__Inputs(this);
  }

  get outputs(): UpdateMinProvingTimeCall__Outputs {
    return new UpdateMinProvingTimeCall__Outputs(this);
  }
}

export class UpdateMinProvingTimeCall__Inputs {
  _call: UpdateMinProvingTimeCall;

  constructor(call: UpdateMinProvingTimeCall) {
    this._call = call;
  }

  get secretType(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get newProvingTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateMinProvingTimeCall__Outputs {
  _call: UpdateMinProvingTimeCall;

  constructor(call: UpdateMinProvingTimeCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class VerifyMatchingEngineCall extends ethereum.Call {
  get inputs(): VerifyMatchingEngineCall__Inputs {
    return new VerifyMatchingEngineCall__Inputs(this);
  }

  get outputs(): VerifyMatchingEngineCall__Outputs {
    return new VerifyMatchingEngineCall__Outputs(this);
  }
}

export class VerifyMatchingEngineCall__Inputs {
  _call: VerifyMatchingEngineCall;

  constructor(call: VerifyMatchingEngineCall) {
    this._call = call;
  }

  get attestationData(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get meSignature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class VerifyMatchingEngineCall__Outputs {
  _call: VerifyMatchingEngineCall;

  constructor(call: VerifyMatchingEngineCall) {
    this._call = call;
  }
}

// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AddIvsKey extends ethereum.Event {
  get params(): AddIvsKey__Params {
    return new AddIvsKey__Params(this);
  }
}

export class AddIvsKey__Params {
  _event: AddIvsKey;

  constructor(event: AddIvsKey) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get signer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AddedStake extends ethereum.Event {
  get params(): AddedStake__Params {
    return new AddedStake__Params(this);
  }
}

export class AddedStake__Params {
  _event: AddedStake;

  constructor(event: AddedStake) {
    this._event = event;
  }

  get generatorAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ChangedGeneratorRewardAddress extends ethereum.Event {
  get params(): ChangedGeneratorRewardAddress__Params {
    return new ChangedGeneratorRewardAddress__Params(this);
  }
}

export class ChangedGeneratorRewardAddress__Params {
  _event: ChangedGeneratorRewardAddress;

  constructor(event: ChangedGeneratorRewardAddress) {
    this._event = event;
  }

  get generator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newRewardAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ComputeLockImposed extends ethereum.Event {
  get params(): ComputeLockImposed__Params {
    return new ComputeLockImposed__Params(this);
  }
}

export class ComputeLockImposed__Params {
  _event: ComputeLockImposed;

  constructor(event: ComputeLockImposed) {
    this._event = event;
  }

  get generator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get compute(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ComputeLockReleased extends ethereum.Event {
  get params(): ComputeLockReleased__Params {
    return new ComputeLockReleased__Params(this);
  }
}

export class ComputeLockReleased__Params {
  _event: ComputeLockReleased;

  constructor(event: ComputeLockReleased) {
    this._event = event;
  }

  get generator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get compute(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DecreaseCompute extends ethereum.Event {
  get params(): DecreaseCompute__Params {
    return new DecreaseCompute__Params(this);
  }
}

export class DecreaseCompute__Params {
  _event: DecreaseCompute;

  constructor(event: DecreaseCompute) {
    this._event = event;
  }

  get generator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get compute(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DeregisteredGenerator extends ethereum.Event {
  get params(): DeregisteredGenerator__Params {
    return new DeregisteredGenerator__Params(this);
  }
}

export class DeregisteredGenerator__Params {
  _event: DeregisteredGenerator;

  constructor(event: DeregisteredGenerator) {
    this._event = event;
  }

  get generator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class IncreasedCompute extends ethereum.Event {
  get params(): IncreasedCompute__Params {
    return new IncreasedCompute__Params(this);
  }
}

export class IncreasedCompute__Params {
  _event: IncreasedCompute;

  constructor(event: IncreasedCompute) {
    this._event = event;
  }

  get generator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get compute(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class IntendToReduceStake extends ethereum.Event {
  get params(): IntendToReduceStake__Params {
    return new IntendToReduceStake__Params(this);
  }
}

export class IntendToReduceStake__Params {
  _event: IntendToReduceStake;

  constructor(event: IntendToReduceStake) {
    this._event = event;
  }

  get generatorAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class JoinedMarketplace extends ethereum.Event {
  get params(): JoinedMarketplace__Params {
    return new JoinedMarketplace__Params(this);
  }
}

export class JoinedMarketplace__Params {
  _event: JoinedMarketplace;

  constructor(event: JoinedMarketplace) {
    this._event = event;
  }

  get generator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get marketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get computeAllocation(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LeftMarketplace extends ethereum.Event {
  get params(): LeftMarketplace__Params {
    return new LeftMarketplace__Params(this);
  }
}

export class LeftMarketplace__Params {
  _event: LeftMarketplace;

  constructor(event: LeftMarketplace) {
    this._event = event;
  }

  get generator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get marketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RegisteredGenerator extends ethereum.Event {
  get params(): RegisteredGenerator__Params {
    return new RegisteredGenerator__Params(this);
  }
}

export class RegisteredGenerator__Params {
  _event: RegisteredGenerator;

  constructor(event: RegisteredGenerator) {
    this._event = event;
  }

  get generator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get initialCompute(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RemovedStake extends ethereum.Event {
  get params(): RemovedStake__Params {
    return new RemovedStake__Params(this);
  }
}

export class RemovedStake__Params {
  _event: RemovedStake;

  constructor(event: RemovedStake) {
    this._event = event;
  }

  get generatorAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RequestComputeDecrease extends ethereum.Event {
  get params(): RequestComputeDecrease__Params {
    return new RequestComputeDecrease__Params(this);
  }
}

export class RequestComputeDecrease__Params {
  _event: RequestComputeDecrease;

  constructor(event: RequestComputeDecrease) {
    this._event = event;
  }

  get generator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get intendedUtilization(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RequestExitMarketplace extends ethereum.Event {
  get params(): RequestExitMarketplace__Params {
    return new RequestExitMarketplace__Params(this);
  }
}

export class RequestExitMarketplace__Params {
  _event: RequestExitMarketplace;

  constructor(event: RequestExitMarketplace) {
    this._event = event;
  }

  get generator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get marketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RequestStakeDecrease extends ethereum.Event {
  get params(): RequestStakeDecrease__Params {
    return new RequestStakeDecrease__Params(this);
  }
}

export class RequestStakeDecrease__Params {
  _event: RequestStakeDecrease;

  constructor(event: RequestStakeDecrease) {
    this._event = event;
  }

  get generatorAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class StakeLockImposed extends ethereum.Event {
  get params(): StakeLockImposed__Params {
    return new StakeLockImposed__Params(this);
  }
}

export class StakeLockImposed__Params {
  _event: StakeLockImposed;

  constructor(event: StakeLockImposed) {
    this._event = event;
  }

  get generatorAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get stake(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class StakeLockReleased extends ethereum.Event {
  get params(): StakeLockReleased__Params {
    return new StakeLockReleased__Params(this);
  }
}

export class StakeLockReleased__Params {
  _event: StakeLockReleased;

  constructor(event: StakeLockReleased) {
    this._event = event;
  }

  get generatorAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get stake(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class StakeSlashed extends ethereum.Event {
  get params(): StakeSlashed__Params {
    return new StakeSlashed__Params(this);
  }
}

export class StakeSlashed__Params {
  _event: StakeSlashed;

  constructor(event: StakeSlashed) {
    this._event = event;
  }

  get generatorAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get stake(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SymbioticCompleteSnapshot extends ethereum.Event {
  get params(): SymbioticCompleteSnapshot__Params {
    return new SymbioticCompleteSnapshot__Params(this);
  }
}

export class SymbioticCompleteSnapshot__Params {
  _event: SymbioticCompleteSnapshot;

  constructor(event: SymbioticCompleteSnapshot) {
    this._event = event;
  }

  get captureTimestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class GeneratorRegistry__generatorInfoPerMarketResult {
  value0: i32;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: i32,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0)),
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getState(): i32 {
    return this.value0;
  }

  getComputePerRequestRequired(): BigInt {
    return this.value1;
  }

  getProofGenerationCost(): BigInt {
    return this.value2;
  }

  getProposedTime(): BigInt {
    return this.value3;
  }

  getActiveRequests(): BigInt {
    return this.value4;
  }
}

export class GeneratorRegistry__generatorRegistryResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: Bytes;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: Bytes,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBytes(this.value6));
    return map;
  }

  getRewardAddress(): Address {
    return this.value0;
  }

  getSumOfComputeAllocations(): BigInt {
    return this.value1;
  }

  getComputeConsumed(): BigInt {
    return this.value2;
  }

  getActiveMarketplaces(): BigInt {
    return this.value3;
  }

  getDeclaredCompute(): BigInt {
    return this.value4;
  }

  getIntendedComputeUtilization(): BigInt {
    return this.value5;
  }

  getGeneratorData(): Bytes {
    return this.value6;
  }
}

export class GeneratorRegistry__getGeneratorAssignmentDetailsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class GeneratorRegistry__getGeneratorRewardDetailsResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class GeneratorRegistry__getGeneratorStateResult {
  value0: i32;
  value1: BigInt;

  constructor(value0: i32, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0)),
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): i32 {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class GeneratorRegistry extends ethereum.SmartContract {
  static bind(address: Address): GeneratorRegistry {
    return new GeneratorRegistry("GeneratorRegistry", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ENTITY_KEY_REGISTRY(): Address {
    let result = super.call(
      "ENTITY_KEY_REGISTRY",
      "ENTITY_KEY_REGISTRY():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_ENTITY_KEY_REGISTRY(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ENTITY_KEY_REGISTRY",
      "ENTITY_KEY_REGISTRY():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  PARALLEL_REQUESTS_UPPER_LIMIT(): BigInt {
    let result = super.call(
      "PARALLEL_REQUESTS_UPPER_LIMIT",
      "PARALLEL_REQUESTS_UPPER_LIMIT():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_PARALLEL_REQUESTS_UPPER_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PARALLEL_REQUESTS_UPPER_LIMIT",
      "PARALLEL_REQUESTS_UPPER_LIMIT():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PROOF_MARKET_PLACE_ROLE(): Bytes {
    let result = super.call(
      "PROOF_MARKET_PLACE_ROLE",
      "PROOF_MARKET_PLACE_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_PROOF_MARKET_PLACE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "PROOF_MARKET_PLACE_ROLE",
      "PROOF_MARKET_PLACE_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  STAKING_MANAGER(): Address {
    let result = super.call(
      "STAKING_MANAGER",
      "STAKING_MANAGER():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_STAKING_MANAGER(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "STAKING_MANAGER",
      "STAKING_MANAGER():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  UNLOCK_WAIT_BLOCKS(): BigInt {
    let result = super.call(
      "UNLOCK_WAIT_BLOCKS",
      "UNLOCK_WAIT_BLOCKS():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_UNLOCK_WAIT_BLOCKS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "UNLOCK_WAIT_BLOCKS",
      "UNLOCK_WAIT_BLOCKS():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  UPGRADE_INTERFACE_VERSION(): string {
    let result = super.call(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );

    return result[0].toString();
  }

  try_UPGRADE_INTERFACE_VERSION(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  generatorInfoPerMarket(
    param0: Address,
    param1: BigInt,
  ): GeneratorRegistry__generatorInfoPerMarketResult {
    let result = super.call(
      "generatorInfoPerMarket",
      "generatorInfoPerMarket(address,uint256):(uint8,uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return new GeneratorRegistry__generatorInfoPerMarketResult(
      result[0].toI32(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
    );
  }

  try_generatorInfoPerMarket(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<GeneratorRegistry__generatorInfoPerMarketResult> {
    let result = super.tryCall(
      "generatorInfoPerMarket",
      "generatorInfoPerMarket(address,uint256):(uint8,uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GeneratorRegistry__generatorInfoPerMarketResult(
        value[0].toI32(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
      ),
    );
  }

  generatorRegistry(
    param0: Address,
  ): GeneratorRegistry__generatorRegistryResult {
    let result = super.call(
      "generatorRegistry",
      "generatorRegistry(address):(address,uint256,uint256,uint256,uint256,uint256,bytes)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new GeneratorRegistry__generatorRegistryResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBytes(),
    );
  }

  try_generatorRegistry(
    param0: Address,
  ): ethereum.CallResult<GeneratorRegistry__generatorRegistryResult> {
    let result = super.tryCall(
      "generatorRegistry",
      "generatorRegistry(address):(address,uint256,uint256,uint256,uint256,uint256,bytes)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GeneratorRegistry__generatorRegistryResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBytes(),
      ),
    );
  }

  getGeneratorAssignmentDetails(
    generatorAddress: Address,
    marketId: BigInt,
  ): GeneratorRegistry__getGeneratorAssignmentDetailsResult {
    let result = super.call(
      "getGeneratorAssignmentDetails",
      "getGeneratorAssignmentDetails(address,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(generatorAddress),
        ethereum.Value.fromUnsignedBigInt(marketId),
      ],
    );

    return new GeneratorRegistry__getGeneratorAssignmentDetailsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_getGeneratorAssignmentDetails(
    generatorAddress: Address,
    marketId: BigInt,
  ): ethereum.CallResult<GeneratorRegistry__getGeneratorAssignmentDetailsResult> {
    let result = super.tryCall(
      "getGeneratorAssignmentDetails",
      "getGeneratorAssignmentDetails(address,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(generatorAddress),
        ethereum.Value.fromUnsignedBigInt(marketId),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GeneratorRegistry__getGeneratorAssignmentDetailsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  getGeneratorRewardDetails(
    generatorAddress: Address,
    marketId: BigInt,
  ): GeneratorRegistry__getGeneratorRewardDetailsResult {
    let result = super.call(
      "getGeneratorRewardDetails",
      "getGeneratorRewardDetails(address,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(generatorAddress),
        ethereum.Value.fromUnsignedBigInt(marketId),
      ],
    );

    return new GeneratorRegistry__getGeneratorRewardDetailsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
    );
  }

  try_getGeneratorRewardDetails(
    generatorAddress: Address,
    marketId: BigInt,
  ): ethereum.CallResult<GeneratorRegistry__getGeneratorRewardDetailsResult> {
    let result = super.tryCall(
      "getGeneratorRewardDetails",
      "getGeneratorRewardDetails(address,uint256):(address,uint256)",
      [
        ethereum.Value.fromAddress(generatorAddress),
        ethereum.Value.fromUnsignedBigInt(marketId),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GeneratorRegistry__getGeneratorRewardDetailsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
      ),
    );
  }

  getGeneratorState(
    generatorAddress: Address,
    marketId: BigInt,
  ): GeneratorRegistry__getGeneratorStateResult {
    let result = super.call(
      "getGeneratorState",
      "getGeneratorState(address,uint256):(uint8,uint256)",
      [
        ethereum.Value.fromAddress(generatorAddress),
        ethereum.Value.fromUnsignedBigInt(marketId),
      ],
    );

    return new GeneratorRegistry__getGeneratorStateResult(
      result[0].toI32(),
      result[1].toBigInt(),
    );
  }

  try_getGeneratorState(
    generatorAddress: Address,
    marketId: BigInt,
  ): ethereum.CallResult<GeneratorRegistry__getGeneratorStateResult> {
    let result = super.tryCall(
      "getGeneratorState",
      "getGeneratorState(address,uint256):(uint8,uint256)",
      [
        ethereum.Value.fromAddress(generatorAddress),
        ethereum.Value.fromUnsignedBigInt(marketId),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GeneratorRegistry__getGeneratorStateResult(
        value[0].toI32(),
        value[1].toBigInt(),
      ),
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  proofMarketplace(): Address {
    let result = super.call(
      "proofMarketplace",
      "proofMarketplace():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_proofMarketplace(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "proofMarketplace",
      "proofMarketplace():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  stakingManager(): Address {
    let result = super.call("stakingManager", "stakingManager():(address)", []);

    return result[0].toAddress();
  }

  try_stakingManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "stakingManager",
      "stakingManager():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _entityRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _stakingManager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddIvsKeyCall extends ethereum.Call {
  get inputs(): AddIvsKeyCall__Inputs {
    return new AddIvsKeyCall__Inputs(this);
  }

  get outputs(): AddIvsKeyCall__Outputs {
    return new AddIvsKeyCall__Outputs(this);
  }
}

export class AddIvsKeyCall__Inputs {
  _call: AddIvsKeyCall;

  constructor(call: AddIvsKeyCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get attestationData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get enclaveSignature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class AddIvsKeyCall__Outputs {
  _call: AddIvsKeyCall;

  constructor(call: AddIvsKeyCall) {
    this._call = call;
  }
}

export class AddStakeCallbackCall extends ethereum.Call {
  get inputs(): AddStakeCallbackCall__Inputs {
    return new AddStakeCallbackCall__Inputs(this);
  }

  get outputs(): AddStakeCallbackCall__Outputs {
    return new AddStakeCallbackCall__Outputs(this);
  }
}

export class AddStakeCallbackCall__Inputs {
  _call: AddStakeCallbackCall;

  constructor(call: AddStakeCallbackCall) {
    this._call = call;
  }

  get generatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddStakeCallbackCall__Outputs {
  _call: AddStakeCallbackCall;

  constructor(call: AddStakeCallbackCall) {
    this._call = call;
  }
}

export class AssignGeneratorTaskCall extends ethereum.Call {
  get inputs(): AssignGeneratorTaskCall__Inputs {
    return new AssignGeneratorTaskCall__Inputs(this);
  }

  get outputs(): AssignGeneratorTaskCall__Outputs {
    return new AssignGeneratorTaskCall__Outputs(this);
  }
}

export class AssignGeneratorTaskCall__Inputs {
  _call: AssignGeneratorTaskCall;

  constructor(call: AssignGeneratorTaskCall) {
    this._call = call;
  }

  get askId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get generatorAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get marketId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AssignGeneratorTaskCall__Outputs {
  _call: AssignGeneratorTaskCall;

  constructor(call: AssignGeneratorTaskCall) {
    this._call = call;
  }
}

export class ChangeRewardAddressCall extends ethereum.Call {
  get inputs(): ChangeRewardAddressCall__Inputs {
    return new ChangeRewardAddressCall__Inputs(this);
  }

  get outputs(): ChangeRewardAddressCall__Outputs {
    return new ChangeRewardAddressCall__Outputs(this);
  }
}

export class ChangeRewardAddressCall__Inputs {
  _call: ChangeRewardAddressCall;

  constructor(call: ChangeRewardAddressCall) {
    this._call = call;
  }

  get newRewardAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeRewardAddressCall__Outputs {
  _call: ChangeRewardAddressCall;

  constructor(call: ChangeRewardAddressCall) {
    this._call = call;
  }
}

export class CompleteGeneratorTaskCall extends ethereum.Call {
  get inputs(): CompleteGeneratorTaskCall__Inputs {
    return new CompleteGeneratorTaskCall__Inputs(this);
  }

  get outputs(): CompleteGeneratorTaskCall__Outputs {
    return new CompleteGeneratorTaskCall__Outputs(this);
  }
}

export class CompleteGeneratorTaskCall__Inputs {
  _call: CompleteGeneratorTaskCall;

  constructor(call: CompleteGeneratorTaskCall) {
    this._call = call;
  }

  get askId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get generatorAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get marketId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get stakeToRelease(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CompleteGeneratorTaskCall__Outputs {
  _call: CompleteGeneratorTaskCall;

  constructor(call: CompleteGeneratorTaskCall) {
    this._call = call;
  }
}

export class DecreaseDeclaredComputeCall extends ethereum.Call {
  get inputs(): DecreaseDeclaredComputeCall__Inputs {
    return new DecreaseDeclaredComputeCall__Inputs(this);
  }

  get outputs(): DecreaseDeclaredComputeCall__Outputs {
    return new DecreaseDeclaredComputeCall__Outputs(this);
  }
}

export class DecreaseDeclaredComputeCall__Inputs {
  _call: DecreaseDeclaredComputeCall;

  constructor(call: DecreaseDeclaredComputeCall) {
    this._call = call;
  }
}

export class DecreaseDeclaredComputeCall__Outputs {
  _call: DecreaseDeclaredComputeCall;

  constructor(call: DecreaseDeclaredComputeCall) {
    this._call = call;
  }
}

export class DeregisterCall extends ethereum.Call {
  get inputs(): DeregisterCall__Inputs {
    return new DeregisterCall__Inputs(this);
  }

  get outputs(): DeregisterCall__Outputs {
    return new DeregisterCall__Outputs(this);
  }
}

export class DeregisterCall__Inputs {
  _call: DeregisterCall;

  constructor(call: DeregisterCall) {
    this._call = call;
  }
}

export class DeregisterCall__Outputs {
  _call: DeregisterCall;

  constructor(call: DeregisterCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class IncreaseDeclaredComputeCall extends ethereum.Call {
  get inputs(): IncreaseDeclaredComputeCall__Inputs {
    return new IncreaseDeclaredComputeCall__Inputs(this);
  }

  get outputs(): IncreaseDeclaredComputeCall__Outputs {
    return new IncreaseDeclaredComputeCall__Outputs(this);
  }
}

export class IncreaseDeclaredComputeCall__Inputs {
  _call: IncreaseDeclaredComputeCall;

  constructor(call: IncreaseDeclaredComputeCall) {
    this._call = call;
  }

  get computeToIncrease(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class IncreaseDeclaredComputeCall__Outputs {
  _call: IncreaseDeclaredComputeCall;

  constructor(call: IncreaseDeclaredComputeCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _proofMarketplace(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _stakingManager(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class IntendToReduceComputeCall extends ethereum.Call {
  get inputs(): IntendToReduceComputeCall__Inputs {
    return new IntendToReduceComputeCall__Inputs(this);
  }

  get outputs(): IntendToReduceComputeCall__Outputs {
    return new IntendToReduceComputeCall__Outputs(this);
  }
}

export class IntendToReduceComputeCall__Inputs {
  _call: IntendToReduceComputeCall;

  constructor(call: IntendToReduceComputeCall) {
    this._call = call;
  }

  get computeToReduce(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class IntendToReduceComputeCall__Outputs {
  _call: IntendToReduceComputeCall;

  constructor(call: IntendToReduceComputeCall) {
    this._call = call;
  }
}

export class IntendToReduceStakeCallbackCall extends ethereum.Call {
  get inputs(): IntendToReduceStakeCallbackCall__Inputs {
    return new IntendToReduceStakeCallbackCall__Inputs(this);
  }

  get outputs(): IntendToReduceStakeCallbackCall__Outputs {
    return new IntendToReduceStakeCallbackCall__Outputs(this);
  }
}

export class IntendToReduceStakeCallbackCall__Inputs {
  _call: IntendToReduceStakeCallbackCall;

  constructor(call: IntendToReduceStakeCallbackCall) {
    this._call = call;
  }

  get generatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class IntendToReduceStakeCallbackCall__Outputs {
  _call: IntendToReduceStakeCallbackCall;

  constructor(call: IntendToReduceStakeCallbackCall) {
    this._call = call;
  }
}

export class JoinMarketplaceCall extends ethereum.Call {
  get inputs(): JoinMarketplaceCall__Inputs {
    return new JoinMarketplaceCall__Inputs(this);
  }

  get outputs(): JoinMarketplaceCall__Outputs {
    return new JoinMarketplaceCall__Outputs(this);
  }
}

export class JoinMarketplaceCall__Inputs {
  _call: JoinMarketplaceCall;

  constructor(call: JoinMarketplaceCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get computePerRequestRequired(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get proofGenerationCost(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get proposedTime(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get updateMarketDedicatedKey(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get attestationData(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get enclaveSignature(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class JoinMarketplaceCall__Outputs {
  _call: JoinMarketplaceCall;

  constructor(call: JoinMarketplaceCall) {
    this._call = call;
  }
}

export class LeaveMarketplaceCall extends ethereum.Call {
  get inputs(): LeaveMarketplaceCall__Inputs {
    return new LeaveMarketplaceCall__Inputs(this);
  }

  get outputs(): LeaveMarketplaceCall__Outputs {
    return new LeaveMarketplaceCall__Outputs(this);
  }
}

export class LeaveMarketplaceCall__Inputs {
  _call: LeaveMarketplaceCall;

  constructor(call: LeaveMarketplaceCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LeaveMarketplaceCall__Outputs {
  _call: LeaveMarketplaceCall;

  constructor(call: LeaveMarketplaceCall) {
    this._call = call;
  }
}

export class LeaveMarketplacesCall extends ethereum.Call {
  get inputs(): LeaveMarketplacesCall__Inputs {
    return new LeaveMarketplacesCall__Inputs(this);
  }

  get outputs(): LeaveMarketplacesCall__Outputs {
    return new LeaveMarketplacesCall__Outputs(this);
  }
}

export class LeaveMarketplacesCall__Inputs {
  _call: LeaveMarketplacesCall;

  constructor(call: LeaveMarketplacesCall) {
    this._call = call;
  }

  get marketIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class LeaveMarketplacesCall__Outputs {
  _call: LeaveMarketplacesCall;

  constructor(call: LeaveMarketplacesCall) {
    this._call = call;
  }
}

export class RegisterCall extends ethereum.Call {
  get inputs(): RegisterCall__Inputs {
    return new RegisterCall__Inputs(this);
  }

  get outputs(): RegisterCall__Outputs {
    return new RegisterCall__Outputs(this);
  }
}

export class RegisterCall__Inputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }

  get rewardAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get declaredCompute(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get generatorData(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class RegisterCall__Outputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }
}

export class ReleaseGeneratorResourcesCall extends ethereum.Call {
  get inputs(): ReleaseGeneratorResourcesCall__Inputs {
    return new ReleaseGeneratorResourcesCall__Inputs(this);
  }

  get outputs(): ReleaseGeneratorResourcesCall__Outputs {
    return new ReleaseGeneratorResourcesCall__Outputs(this);
  }
}

export class ReleaseGeneratorResourcesCall__Inputs {
  _call: ReleaseGeneratorResourcesCall;

  constructor(call: ReleaseGeneratorResourcesCall) {
    this._call = call;
  }

  get generatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get marketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ReleaseGeneratorResourcesCall__Outputs {
  _call: ReleaseGeneratorResourcesCall;

  constructor(call: ReleaseGeneratorResourcesCall) {
    this._call = call;
  }
}

export class RemoveEncryptionKeyCall extends ethereum.Call {
  get inputs(): RemoveEncryptionKeyCall__Inputs {
    return new RemoveEncryptionKeyCall__Inputs(this);
  }

  get outputs(): RemoveEncryptionKeyCall__Outputs {
    return new RemoveEncryptionKeyCall__Outputs(this);
  }
}

export class RemoveEncryptionKeyCall__Inputs {
  _call: RemoveEncryptionKeyCall;

  constructor(call: RemoveEncryptionKeyCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveEncryptionKeyCall__Outputs {
  _call: RemoveEncryptionKeyCall;

  constructor(call: RemoveEncryptionKeyCall) {
    this._call = call;
  }
}

export class RemoveStakeCallbackCall extends ethereum.Call {
  get inputs(): RemoveStakeCallbackCall__Inputs {
    return new RemoveStakeCallbackCall__Inputs(this);
  }

  get outputs(): RemoveStakeCallbackCall__Outputs {
    return new RemoveStakeCallbackCall__Outputs(this);
  }
}

export class RemoveStakeCallbackCall__Inputs {
  _call: RemoveStakeCallbackCall;

  constructor(call: RemoveStakeCallbackCall) {
    this._call = call;
  }

  get generatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RemoveStakeCallbackCall__Outputs {
  _call: RemoveStakeCallbackCall;

  constructor(call: RemoveStakeCallbackCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get callerConfirmation(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RequestForExitMarketplaceCall extends ethereum.Call {
  get inputs(): RequestForExitMarketplaceCall__Inputs {
    return new RequestForExitMarketplaceCall__Inputs(this);
  }

  get outputs(): RequestForExitMarketplaceCall__Outputs {
    return new RequestForExitMarketplaceCall__Outputs(this);
  }
}

export class RequestForExitMarketplaceCall__Inputs {
  _call: RequestForExitMarketplaceCall;

  constructor(call: RequestForExitMarketplaceCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RequestForExitMarketplaceCall__Outputs {
  _call: RequestForExitMarketplaceCall;

  constructor(call: RequestForExitMarketplaceCall) {
    this._call = call;
  }
}

export class RequestForExitMarketplacesCall extends ethereum.Call {
  get inputs(): RequestForExitMarketplacesCall__Inputs {
    return new RequestForExitMarketplacesCall__Inputs(this);
  }

  get outputs(): RequestForExitMarketplacesCall__Outputs {
    return new RequestForExitMarketplacesCall__Outputs(this);
  }
}

export class RequestForExitMarketplacesCall__Inputs {
  _call: RequestForExitMarketplacesCall;

  constructor(call: RequestForExitMarketplacesCall) {
    this._call = call;
  }

  get marketIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class RequestForExitMarketplacesCall__Outputs {
  _call: RequestForExitMarketplacesCall;

  constructor(call: RequestForExitMarketplacesCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class StakeLockImposedCallbackCall extends ethereum.Call {
  get inputs(): StakeLockImposedCallbackCall__Inputs {
    return new StakeLockImposedCallbackCall__Inputs(this);
  }

  get outputs(): StakeLockImposedCallbackCall__Outputs {
    return new StakeLockImposedCallbackCall__Outputs(this);
  }
}

export class StakeLockImposedCallbackCall__Inputs {
  _call: StakeLockImposedCallbackCall;

  constructor(call: StakeLockImposedCallbackCall) {
    this._call = call;
  }

  get generatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class StakeLockImposedCallbackCall__Outputs {
  _call: StakeLockImposedCallbackCall;

  constructor(call: StakeLockImposedCallbackCall) {
    this._call = call;
  }
}

export class StakeLockReleasedCallbackCall extends ethereum.Call {
  get inputs(): StakeLockReleasedCallbackCall__Inputs {
    return new StakeLockReleasedCallbackCall__Inputs(this);
  }

  get outputs(): StakeLockReleasedCallbackCall__Outputs {
    return new StakeLockReleasedCallbackCall__Outputs(this);
  }
}

export class StakeLockReleasedCallbackCall__Inputs {
  _call: StakeLockReleasedCallbackCall;

  constructor(call: StakeLockReleasedCallbackCall) {
    this._call = call;
  }

  get generatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class StakeLockReleasedCallbackCall__Outputs {
  _call: StakeLockReleasedCallbackCall;

  constructor(call: StakeLockReleasedCallbackCall) {
    this._call = call;
  }
}

export class StakeSlashedCallbackCall extends ethereum.Call {
  get inputs(): StakeSlashedCallbackCall__Inputs {
    return new StakeSlashedCallbackCall__Inputs(this);
  }

  get outputs(): StakeSlashedCallbackCall__Outputs {
    return new StakeSlashedCallbackCall__Outputs(this);
  }
}

export class StakeSlashedCallbackCall__Inputs {
  _call: StakeSlashedCallbackCall;

  constructor(call: StakeSlashedCallbackCall) {
    this._call = call;
  }

  get generatorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class StakeSlashedCallbackCall__Outputs {
  _call: StakeSlashedCallbackCall;

  constructor(call: StakeSlashedCallbackCall) {
    this._call = call;
  }
}

export class SymbioticCompleteSnapshotCallbackCall extends ethereum.Call {
  get inputs(): SymbioticCompleteSnapshotCallbackCall__Inputs {
    return new SymbioticCompleteSnapshotCallbackCall__Inputs(this);
  }

  get outputs(): SymbioticCompleteSnapshotCallbackCall__Outputs {
    return new SymbioticCompleteSnapshotCallbackCall__Outputs(this);
  }
}

export class SymbioticCompleteSnapshotCallbackCall__Inputs {
  _call: SymbioticCompleteSnapshotCallbackCall;

  constructor(call: SymbioticCompleteSnapshotCallbackCall) {
    this._call = call;
  }

  get captureTimestamp(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SymbioticCompleteSnapshotCallbackCall__Outputs {
  _call: SymbioticCompleteSnapshotCallbackCall;

  constructor(call: SymbioticCompleteSnapshotCallbackCall) {
    this._call = call;
  }
}

export class UpdateEncryptionKeyCall extends ethereum.Call {
  get inputs(): UpdateEncryptionKeyCall__Inputs {
    return new UpdateEncryptionKeyCall__Inputs(this);
  }

  get outputs(): UpdateEncryptionKeyCall__Outputs {
    return new UpdateEncryptionKeyCall__Outputs(this);
  }
}

export class UpdateEncryptionKeyCall__Inputs {
  _call: UpdateEncryptionKeyCall;

  constructor(call: UpdateEncryptionKeyCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get attestationData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get enclaveSignature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class UpdateEncryptionKeyCall__Outputs {
  _call: UpdateEncryptionKeyCall;

  constructor(call: UpdateEncryptionKeyCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
